class JSON::Schema::Serializer
  public

  def serialize: (untyped data) -> untyped

  private

  def initialize: (untyped schema, ?untyped options) -> untyped
end

JSON::Schema::Serializer::VERSION: String

class JSON::Schema::Serializer::DataWithContext < Struct[untyped]
  def self.[]: (*untyped) -> untyped

  def self.inspect: () -> untyped

  def self.members: () -> untyped

  def self.new: (*untyped) -> untyped

  public

  def context: () -> untyped

  def context=: (untyped _) -> untyped

  def data: () -> untyped

  def data=: (untyped _) -> untyped
end

class JSON::Schema::Serializer::Walker
  def self.detect_type: (untyped `type`, untyped obj) -> untyped

  def self.type_coerce: (untyped schema, untyped `type`, untyped format, untyped obj, untyped required, untyped using_default, untyped options) -> untyped

  def self.walk: (untyped schema, untyped obj, untyped required, untyped using_default, untyped options) -> untyped
end

module JSON::Schema::Serializer::WithContext
  public

  def with_context!: (untyped arg1, ?untyped arg2) -> untyped
end

JSON::Schema::Serializer::WithContext::ARG2_NOT_GIVEN: Symbol
